(ns jirgee.services.file
  (:require
   ["package:path_provider/path_provider.dart" :as path-provider]
   ["package:http/http.dart" :as http]
   ["dart:io" :as io]
   ["dart:convert" :as convert]
   ["dart:async" :as a]
   [jirgee.states.global :as gs]
   [jirgee.common.utils :as utils]))

(defn export-to-file []
  (let [directory (await (path-provider/getExternalStorageDirectory))
        directory (if (empty? directory)
                    (path-provider/getApplicationDocumentsDirectory)
                    directory)
        file-name (-> (.now DateTime) .toString (.substring 0 19))]))


(defn ^:async upload-file [^#/(List io/File) files]
  (swap! gs/state assoc :temp-file-links nil)
  (let [uri (Uri/http utils/base-url "/api/file/upload")
        ^http/MultipartRequest request (http/MultipartRequest "POST" uri)]
    (doall
     (map #(let [multipart (await (http.MultipartFile/fromPath "files" (.-path (.-uri %))))]
             (.add (.-files request) multipart)
             true)
          files))
    (.addAll (.-headers request) {"Authorization" (str "Token " (get @gs/state :user-token))})

    (let [resp (await (.send request))
          response (await (http.Response/fromStream resp))
          response-body (convert/jsonDecode (.-body response))]
      (dart:core/print (str "response-body = " response-body))
      (swap! gs/state assoc :temp-file-links response-body))))