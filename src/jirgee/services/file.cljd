(ns jirgee.services.file
  (:require
   ["package:path_provider/path_provider.dart" :as path-provider]
   ["package:http/http.dart" :as http]
   ["dart:io" :as io]
   [jirgee.states.global :as gs]
   [jirgee.common.utils :as utils]))

;;
;; String.fromCharCode (72)


(defn export-to-file []
  (let [directory (await (path-provider/getExternalStorageDirectory))
        directory (if (empty? directory)
                    (path-provider/getApplicationDocumentsDirectory)
                    directory)
        file-name (-> (.now DateTime) .toString (.substring 0 19))]))


(defn upload-file [^io/File file]
  (let [uri (Uri/http utils/base-url "/api/file/upload")
        request (http/MultipartRequest "POST" uri)
        multipart (await (http.MultipartFile/fromPath "file" (.-path (.-uri file))))]
    (.add (.-files request) multipart)
    (.addAll (.-headers request) {"Authorization" (str "Token " (get @gs/state :user-token))})

    (let [response (await (.send request))]
      (dart:core/print response))))