(ns jirgee.screens.new-tweet
  (:require 
   ["package:flutter/material.dart" :as m]
   ["package:flutter/painting.dart" :as painting]
   ["package:mongol/mongol.dart" :as mgl]
   ["package:carousel_slider/carousel_slider.dart" :as carousel-slider]
   ["package:flutter_svg/svg.dart" :as svg]
   ["dart:io" :as io]
   [cljd.flutter.alpha2 :as f]
   [jirgee.states.global :as gs]
   [jirgee.common.theme :as theme]
   [jirgee.common.utils :as utils]
   [jirgee.widgets.rounded-small-button :as custom-button]))

(defn create-tweet []
  (f/widget
   :context ctx
   :get [m/Navigator]
   :let [images (atom [])]
   :watch [{userinfo :user-info
            {is-loading :is-loading} :tweets} gs/state
           imgs images]
   :managed [text-controller (m/TextEditingController)]
   (m/Scaffold
    .appBar (m/AppBar
             .leading (m/IconButton
                       .onPressed #(.pop navigator)
                       .icon (m/Icon m.Icons/close .size 30))
             .actions [(custom-button/button
                        "Tweet"
                        #(dart:core/print "custom button ...."))])
    .body
    (if false;(or (true? is-loading) (nil? userinfo))
      (m/SizedBox)
      (m/SafeArea
       .child
       (m/SingleChildScrollView
        .scrollDirection m.Axis/horizontal
        .child
        (m/Row
         .children
         [
          (m/Column
           .crossAxisAlignment m.CrossAxisAlignment/start
           .children
           [(m/CircleAvatar
            ;;  .backgroundImage (painting/NetworkImage (get userinfo "profile_image_url"))
             .backgroundImage 
            ;;  (painting/NetworkImage "https://flutter.github.io/assets-for-api-docs/assets/widgets/owl.jpg")
             (m/AssetImage "assets/images/pexels-landon-parenteau-6946663.jpg")
             .radius 30)
            (m/SizedBox .height 15)
            (m/Expanded
             .child
             (mgl/MongolTextField
              .controller text-controller
              .style (m/TextStyle .fontSize 22)
              .decoration (m/InputDecoration
                           .hintText "What's happening?"
                           .hintStyle (m/TextStyle
                                       .color theme/grey-color
                                       .fontSize 22
                                       .fontWeight m.FontWeight/w600)
                           .border m.InputBorder/none)
              .maxLines nil))])

          (if-not (empty? imgs)
            (m/Container 
             .width 480
             .child
            (carousel-slider/CarouselSlider
             .items (-> imgs
                        (.map (fn [^io/File file]
                                (m/Container .width 400
                                            ;;  (-> m/MediaQuery
                                            ;;             (.of ctx)
                                            ;;             .size
                                            ;;             .width
                                            ;;              (/ 1.8)
                                            ;;             )
                                             .margin (.symmetric m/EdgeInsets .vertical 5)
                                             .child (.file m/Image file))))
                        (.toList))
             .options (carousel-slider/CarouselOptions
                       .height 400
                       .enableInfiniteScroll false)))
            (m/SizedBox))
          ])
          )))
    .bottomNavigationBar
    (m/Container
     .padding (.only m/EdgeInsets .bottom 10)
     .decoration (m/BoxDecoration
                  .border
                  (m/Border .top (m/BorderSide .color theme/grey-color .width 0.3)))
     .child
     (m/Row
      .mainAxisAlignment m.MainAxisAlignment/spaceAround
      .children
      [(m/Padding
        .padding (.copyWith (.all m/EdgeInsets 8) .left 15 .right 15)
        .child (m/GestureDetector
                .onTap (fn []
                         (reset! images (await (utils/pick-images))))
                .child (.asset svg/SvgPicture "assets/svgs/gallery.svg")))
       (m/Padding
        .padding (.copyWith (.all m/EdgeInsets 8) .left 15 .right 15)
        .child (m/GestureDetector
                .onTap (fn []
                         (dart:core/print @images))
                .child (.asset svg/SvgPicture
                               "assets/svgs/gif.svg")))
       (m/Padding
        .padding (.copyWith (.all m/EdgeInsets 8) .left 15 .right 15)
        .child (.asset svg/SvgPicture
                       "assets/svgs/emoji.svg"))]))
                       )))

(defn ^m/Widget screen [ctx]
  (create-tweet))