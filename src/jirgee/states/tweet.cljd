(ns jirgee.states.tweet
  (:require
   ["package:flutter/widgets.dart" :as widgets]
   [jirgee.states.global :as gs]
   [jirgee.services.tweet :as tweet-service]))

(defn focus-on-edit [controller]
  (when-not (empty? (:keyboard/candidates-list @gs/state))
    (swap! gs/state assoc :keyboard/candidates-list []))
  (swap! gs/state assoc :show-keyboard true)
  (swap! gs/state assoc :keyboard/text-controller controller))

(defn unfocus-on-edit []
  (swap! gs/state assoc :show-keyboard false)
  (when-not (empty? (:keyboard/candidates-list @gs/state))
    (swap! gs/state assoc :keyboard/candidates-list [])))

(defn reply-success-callback [ctx]
  (swap! gs/state assoc :keyboard/return-mode :multi-line)
  (swap! gs/state assoc :floating-input false)
  (tweet-service/get-tweets ctx nil nil))

(defn click-on-comment-button [ctx text-controller tweet]
  (gs/open-floating-input text-controller)
  (swap! gs/state assoc :keyboard/return-mode :single-line)
  (swap! gs/state assoc :keyboard/return-callback 
         (fn []
           (tweet-service/reply
            ctx
            (get tweet "id")
            {"content" (.-text text-controller)}
            #(reply-success-callback ctx))))
  (swap! gs/state assoc :tweet tweet))

(defn to-new-tweet-page [^widgets/NavigatorState navigator]
  (.pushNamed navigator "/create_tweet")
  (swap! gs/state assoc :keyboard/return-mode :multi-line))